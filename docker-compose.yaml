version: '3.8'

services:
  #--- weAlist-User Service ---
  user-service:
    image: ressbe/wealist-user:${USER_IMAGE_TAG:-latest}
    container_name: wealist-user-service
    environment:
      # Spring Boot 표준 데이터베이스 설정
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${USER_DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${USER_DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${USER_DB_PASSWORD}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver

      - APP_NAME=${APP_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION_MS=${JWT_EXPIRATION_MS}
      - JWT_ACCESS_MS=${JWT_ACCESS_MS}

      # JPA/Hibernate 설정
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${JPA_DDL_AUTO}
      - SPRING_JPA_SHOW_SQL=${JPA_SHOW_SQL}
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=${JPA_FORMAT_SQL}
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect

      # Redis 설정
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD}
      - SPRING_REDIS_DATABASE=0

      - USER_SERVICE_PORT=${USER_SERVICE_PORT}

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    networks:
      - wealist-net

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  #--- Kanban Service ---
  kanban-service:
    image: ressbe/wealist-board:${KANBAN_IMAGE_TAG:-latest}
    container_name: wealist-kanban-service
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]  # ← 이 라인 추가
    environment:
      - DATABASE_URL=postgresql://${KANBAN_DB_USER}:${KANBAN_DB_PASSWORD}@postgres:5432/${KANBAN_DB_NAME}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/1
      - SECRET_KEY=${JWT_SECRET}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
    ports:
      - "8000:8000"
    networks:
      - wealist-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s

  #--- Shared PostgreSQL (multi-database) ---
  postgres:
    image: postgres:17-alpine
    container_name: wealist-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_SUPERUSER}
      POSTGRES_PASSWORD: ${POSTGRES_SUPERUSER_PASSWORD}
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=en-US"
      USER_DB_NAME: ${USER_DB_NAME}
      USER_DB_USER: ${USER_DB_USER}
      USER_DB_PASSWORD: ${USER_DB_PASSWORD}
      KANBAN_DB_NAME: ${KANBAN_DB_NAME}
      KANBAN_DB_USER: ${KANBAN_DB_USER}
      KANBAN_DB_PASSWORD: ${KANBAN_DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    ports:
      - "5432:5432"
    networks:
      - wealist-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_SUPERUSER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  #--- Shared Redis (with DB separation) ---
  redis:
    image: redis:7.2-alpine
    container_name: wealist-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --databases 16 --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - wealist-net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

#--- Networks and Volumes ---
networks:
  wealist-net:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
